@using fourtynine.Navbar
@inject INavbarActionsService NavbarActionsService
@{
  Layout = "_BarebonesLayout";
}
@* https://github.com/tailwindtoolbox/Landing-Page/blob/master/index.html *@

<nav
  id="header"
  class="
    fixed
    w-full
    z-30
    top-0
    text-white
  "
>
  <div
    class="
      container
      flex
      flex-wrap
      items-center
      justify-between
      w-full
      mx-auto
      mt-0 py-2
    "
  >
    <a
      class="
        toggleColour
        text-white
        no-underline
        hover:no-underline
        font-bold
        text-2xl
        lg:text-4xl
      "
      href="@(NavbarActionsService.HomeAction.Path)"
    >
      <div
        class="
          pl-4
          flex
          items-center
        "
      >
        49
      </div>
    </a>
    <div
      class="
        block
        lg:hidden
        pr-4
      "
    >
      <button
        id="nav-toggle"
        class="
          flex
          items-center
          p-1
          text-pink-800
          hover:text-gray-900
          focus:outline-none
          focus:shadow-outline
          transform transition hover:scale-105 duration-300 ease-in-out
        "
      >
        <svg
          class="
            fill-current
            h-6 w-6
          "
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <title>Menu</title>
          <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z" />
        </svg>
      </button>
    </div>
    <div
      id="nav-content"
      class="
        w-full
        flex-grow
        lg:flex
        lg:items-center
        lg:w-auto
        hidden
        mt-2 lg:mt-0
        bg-white
        lg:bg-transparent
        text-black
        p-4 lg:p-0 z-20
      "
    >
      <ul
        class="
          list-reset
          lg:flex
          justify-end
          flex-1
          items-center
        "
      >
        @{
          var navbarActions = new[] { NavbarActionsService.HomeAction }
            .Concat(NavbarActionsService.NavbarActions);
          var currentRouteInfo = ViewContext.GetCurrentRouteInfo();
          var activeClasses = @"font-bold";
          var inactiveClasses = @"
            hover:text-gray-800
            hover:text-underline
          ";
          var linkClasses = @"
            inline-block
            text-black
            no-underline
            py-2 px-4
          ";
          
          foreach (var navbarAction in navbarActions)
          {
            bool isActive = navbarAction.IsMatch(currentRouteInfo);
            <li class="mr-3">
              <a
                class="
                  @(isActive ? activeClasses : inactiveClasses)
                  @(linkClasses)
                "
                href="@(navbarAction.Path)"
              >
                @(navbarAction.DisplayName)
              </a>
            </li>
          }
        }
      </ul>
      @{
        var logAction = (User.Identity?.IsAuthenticated ?? false)
          ? NavbarActionsService.Logout
          : NavbarActionsService.Login;
        <a href="@(logAction.Path)">
          <button
            class="
            mx-auto
            lg:mx-0
            hover:underline
            bg-white
            text-gray-800
            font-bold
            rounded-full
            mt-4
            lg:mt-0
            py-4 px-8
            shadow
            opacity-75
            focus:outline-none
            focus:shadow-outline
            transform transition hover:scale-105 duration-300 ease-in-out
          ">
            @(logAction.DisplayName)
          </button>
        </a>
      }
    </div>
  </div>
  <hr class="border-b border-gray-100 opacity-25 my-0 py-0" />
</nav>

<!--Container-->
<div 
  class="
    container
    shadow-lg
    mx-auto
    bg-white
    flex justify-center
    w-full
    mt-24
    md:mt-18
    min-h-screen
  "
>
	@RenderBody()
</div>